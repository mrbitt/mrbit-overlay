From 83626b77fc7d8fae005fd4575dd85dbb0f243081 Mon Sep 17 00:00:00 2001
From: Lauri Kasanen <curaga@operamail.com>
Date: Thu, 14 Apr 2016 14:32:32 +0300
Subject: [PATCH] Backport a225c6c061db1

More std::isnan
---
 Source/JavaScriptCore/runtime/Options.cpp                    | 2 +-
 Source/WebCore/platform/linux/MemoryPressureHandlerLinux.cpp | 2 ++
 2 files changed, 3 insertions(+), 1 deletion(-)

diff --git a/Source/JavaScriptCore/runtime/Options.cpp b/Source/JavaScriptCore/runtime/Options.cpp
index 9762ce3c3..1c7a38831 100644
--- a/Source/JavaScriptCore/runtime/Options.cpp
+++ b/Source/JavaScriptCore/runtime/Options.cpp
@@ -482,7 +482,7 @@ bool Option::operator==(const Option& other) const
     case Options::Type::unsignedType:
         return m_entry.unsignedVal == other.m_entry.unsignedVal;
     case Options::Type::doubleType:
-        return (m_entry.doubleVal == other.m_entry.doubleVal) || (isnan(m_entry.doubleVal) && isnan(other.m_entry.doubleVal));
+        return (m_entry.doubleVal == other.m_entry.doubleVal) || (std::isnan(m_entry.doubleVal) && std::isnan(other.m_entry.doubleVal));
     case Options::Type::int32Type:
         return m_entry.int32Val == other.m_entry.int32Val;
     case Options::Type::optionRangeType:
diff --git a/Source/WebCore/platform/linux/MemoryPressureHandlerLinux.cpp b/Source/WebCore/platform/linux/MemoryPressureHandlerLinux.cpp
index bbbd44a56..8c2aaaf0a 100644
--- a/Source/WebCore/platform/linux/MemoryPressureHandlerLinux.cpp
+++ b/Source/WebCore/platform/linux/MemoryPressureHandlerLinux.cpp
@@ -201,8 +201,10 @@ void MemoryPressureHandler::respondToMemoryPressure(bool critical)
 
 void MemoryPressureHandler::platformReleaseMemory(bool)
 {
+#ifdef __GLIBC__
     ReliefLogger log("Run malloc_trim");
     malloc_trim(0);
+#endif
 }
 
 void MemoryPressureHandler::ReliefLogger::platformLog()
