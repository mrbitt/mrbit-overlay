diff -Naur Hurrican-o/src/Gameplay.cpp Hurrican/src/Gameplay.cpp
--- Hurrican-o/src/Gameplay.cpp	2012-06-11 12:43:18.000000000 +0200
+++ Hurrican/src/Gameplay.cpp	2012-06-15 09:01:53.384365253 +0200
@@ -34,6 +34,10 @@
 #include "Tileengine.h"
 #include "Timer.h"
 
+#if defined(__LINUX__)
+#include <sys/stat.h>
+#endif
+
 // --------------------------------------------------------------------------------------
 // Gameplay Variablen
 // --------------------------------------------------------------------------------------
@@ -71,6 +75,19 @@
 
 int		DisplayHintNr = -1;
 
+
+#if defined(__LINUX__)
+// file in HOME
+
+std::string homefile(std::string file)
+{
+	std::string home=getenv("HOME");
+	std::string hurrihome=home+"/.config/hurrican/";
+	mkdir(hurrihome.c_str(), 0755);
+	return hurrihome+file;	
+}
+#endif
+
 // --------------------------------------------------------------------------------------
 // Ein neues Spiel initialisieren
 // --------------------------------------------------------------------------------------
@@ -683,8 +700,11 @@
 	float Sound, Musik;
 
 	FILE *Datei = NULL;
-
+#if defined(__LINUX__)
+	fopen_s(&Datei, homefile(CONFIGFILE).c_str(), "rb"); // versuchen Datei zu öffnen
+#else
 	fopen_s(&Datei, CONFIGFILE, "rb");		// versuchen Datei zu öffnen
+#endif
 
 	if (Datei == NULL)
 		return false;
@@ -770,7 +790,12 @@
 
 	FILE *Datei = NULL;
 
+#if defined(__LINUX__)
+	fopen_s(&Datei, homefile(CONFIGFILE).c_str(), "wb");
+#else
 	fopen_s(&Datei, CONFIGFILE, "wb");
+#endif
+
 	if (Datei == NULL)
     {
    		Protokoll.WriteText("Config file saving failed !\n", false);
diff -Naur Hurrican-o/src/Gameplay.h Hurrican/src/Gameplay.h
--- Hurrican-o/src/Gameplay.h	2012-06-11 12:43:18.000000000 +0200
+++ Hurrican/src/Gameplay.h	2012-06-15 08:56:05.954362843 +0200
@@ -87,5 +87,9 @@
 
 extern char	StageReihenfolge[256][100];
 
+#if defined(__LINUX__)
+extern std::string homefile(std::string file);
+#endif
+
 #endif
 
diff -Naur Hurrican-o/src/Logdatei.cpp Hurrican/src/Logdatei.cpp
--- Hurrican-o/src/Logdatei.cpp	2012-06-11 12:43:18.000000000 +0200
+++ Hurrican/src/Logdatei.cpp	2012-06-15 09:21:03.644373234 +0200
@@ -40,7 +40,7 @@
 // erstellt eine neue Logdatei mit dem Namen "Name"
 // --------------------------------------------------------------------------------------
 
-Logdatei::Logdatei(const char Name[20])
+Logdatei::Logdatei(const char Name[100])
 {
 	int len = strlen(Name) + 1;
 	strcpy_s(itsFilename, len, Name);							// Namen sichern
diff -Naur Hurrican-o/src/Logdatei.h Hurrican/src/Logdatei.h
--- Hurrican-o/src/Logdatei.h	2012-06-11 12:43:20.000000000 +0200
+++ Hurrican/src/Logdatei.h	2012-06-15 09:16:44.774371437 +0200
@@ -19,12 +19,12 @@
 class Logdatei
 {
 	private:
-		char itsFilename[20];								// Dateiname der Log-Datei
+		char itsFilename[100];								// Dateiname der Log-Datei
 
 	public:
 		bool	delLogFile;									// Logfile am Ende löschen, wenn kein Fehler auftrat
 
-		     Logdatei    (const char Name[20]);					// Konstruktor
+		     Logdatei    (const char Name[100]);					// Konstruktor
 			~Logdatei    (void);							// Desktruktor;
 		void WriteText   (const char Text[180], bool Abbruch);	// Text in Datei schreiben
 		void WriteValue  (int value);						// Wert in Datei schreiben
diff -Naur Hurrican-o/src/Main.cpp Hurrican/src/Main.cpp
--- Hurrican-o/src/Main.cpp	2012-06-11 12:43:20.000000000 +0200
+++ Hurrican/src/Main.cpp	2012-06-15 08:53:17.284361671 +0200
@@ -101,6 +101,8 @@
 TimerClass				*pTimer;						// Timer Klasse für die Framerate
 #if defined(__AROS__)
 Logdatei				Protokoll("T:Game_Log.txt");		// Protokoll Datei
+#elif defined(__LINUX__)
+Logdatei				Protokoll(homefile("Game_Log.txt").c_str());		// Protokoll Datei
 #else
 Logdatei				Protokoll("Game_Log.txt");		// Protokoll Datei
 #endif
@@ -559,7 +561,12 @@
 
 	// Kein Fehler im Game? Dann Logfile löschen
 	if (Protokoll.delLogFile == true)
+
+#if defined(__LINUX__)
+		DeleteFile(homefile("Game_Log.txt").c_str());
+#else
 		DeleteFile("Game_Log.txt");
+#endif
 
 #if defined(PLATFORM_DIRECTX)
 	return(message.wParam);										// Rückkehr zu Windows
diff -Naur Hurrican-o/src/Menu.cpp Hurrican/src/Menu.cpp
--- Hurrican-o/src/Menu.cpp	2012-06-11 12:43:19.000000000 +0200
+++ Hurrican/src/Menu.cpp	2012-06-15 08:55:10.814362460 +0200
@@ -2666,8 +2666,12 @@
 	// Versuchen, die Highscore Datei zu öffnen
 	// falls sie nicht existiert oder es eine Fehler gibt, wird die Standard
 	// Highscore gesetzt
-	fopen_s(&Datei, "Hurrican.hsl", "rb");
 
+#if defined(__LINUX__)
+	fopen_s(&Datei, homefile("Hurrican.hsl").c_str(), "rb");
+#else
+	fopen_s(&Datei, "Hurrican.hsl", "rb");
+#endif
 
 	// Fehler beim Öffnen ? Dann standard Highscore setzen
 	//
@@ -2722,7 +2726,11 @@
 	FILE *Datei;			// Savegame Datei
 
 	// Highscore Datei öffnen
+#if defined(__LINUX__)
+	fopen_s(&Datei, homefile("Hurrican.hsl").c_str(), "wb");
+#else
 	fopen_s(&Datei, "Hurrican.hsl", "wb");
+#endif
 
 	// Fehler beim Öffnen ? Dann standard Highscore setzen
 	//
