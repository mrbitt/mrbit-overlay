# HG changeset patch
# User J. H. Palmieri <palmieri@math.washington.edu>
# Date 1362513949 28800
# Node ID 554fc77b1eefb3539a8a4f554d246dc5f666d6b1
# Parent  0399181d5e5197389d2ec99b14ed43e02c016ab0
Fixes for matplotlib 1.2.0

diff --git a/sage/plot/colors.py b/sage/plot/colors.py
--- a/sage/plot/colors.py
+++ b/sage/plot/colors.py
@@ -1352,15 +1352,15 @@
 
         sage: from sage.plot.colors import get_cmap
         sage: get_cmap('jet')
-        <matplotlib.colors.LinearSegmentedColormap instance at 0x...>
+        <matplotlib.colors.LinearSegmentedColormap object at 0x...>
         sage: get_cmap(u'jet')
-        <matplotlib.colors.LinearSegmentedColormap instance at 0x...>
+        <matplotlib.colors.LinearSegmentedColormap object at 0x...>
         sage: get_cmap([(0,0,0), (0.5,0.5,0.5), (1,1,1)])
-        <matplotlib.colors.ListedColormap instance at 0x...>
+        <matplotlib.colors.ListedColormap object at 0x...>
         sage: get_cmap(['green', 'lightblue', 'blue'])
-        <matplotlib.colors.ListedColormap instance at 0x...>
+        <matplotlib.colors.ListedColormap object at 0x...>
         sage: get_cmap(((0.5, 0.3, 0.2), [1.0, 0.0, 0.5], 'purple', Color(0.5,0.5,1, space='hsv')))
-        <matplotlib.colors.ListedColormap instance at 0x...>
+        <matplotlib.colors.ListedColormap object at 0x...>
         sage: get_cmap('jolies')
         Traceback (most recent call last):
         ...
@@ -1533,9 +1533,9 @@
             sage: from sage.plot.colors import Colormaps
             sage: maps = Colormaps()
             sage: maps.get('Oranges')
-            <matplotlib.colors.LinearSegmentedColormap instance at ...>
+            <matplotlib.colors.LinearSegmentedColormap object at ...>
             sage: maps['copper']
-            <matplotlib.colors.LinearSegmentedColormap instance at ...>
+            <matplotlib.colors.LinearSegmentedColormap object at ...>
             sage: maps.get('not a color map')
             sage: maps['not a color map']
             Traceback (most recent call last):
@@ -1565,7 +1565,7 @@
             sage: from sage.plot.colors import Colormaps
             sage: maps = Colormaps()
             sage: maps.pink
-            <matplotlib.colors.LinearSegmentedColormap instance at ...>
+            <matplotlib.colors.LinearSegmentedColormap object at ...>
             sage: maps.punk
             Traceback (most recent call last):
             ...
@@ -1642,7 +1642,7 @@
             sage: maps = Colormaps()
             sage: count = len(maps)
             sage: maps.popitem()
-            ('Spectral', <matplotlib.colors.LinearSegmentedColormap instance at ...>)
+            ('Spectral', <matplotlib.colors.LinearSegmentedColormap object at ...>)
             sage: count - 1 == len(maps)
             True
         """
diff --git a/sage/plot/graphics.py b/sage/plot/graphics.py
--- a/sage/plot/graphics.py
+++ b/sage/plot/graphics.py
@@ -1938,10 +1938,10 @@
             sage: p._objects[0]._render_on_subplot(subplot)
             sage: p._matplotlib_tick_formatter(subplot, **d)
             (<matplotlib.axes.AxesSubplot object at ...>,
-            <matplotlib.ticker.MaxNLocator instance at ...>,
-            <matplotlib.ticker.MaxNLocator instance at ...>,
-            <matplotlib.ticker.OldScalarFormatter instance at ...>,
-            <matplotlib.ticker.OldScalarFormatter instance at ...>)
+            <matplotlib.ticker.MaxNLocator object at ...>,
+            <matplotlib.ticker.MaxNLocator object at ...>,
+            <matplotlib.ticker.OldScalarFormatter object at ...>,
+            <matplotlib.ticker.OldScalarFormatter object at ...>)
         """
         # This function is created to refactor some code that is repeated
         # in the matplotlib function
diff --git a/sage/plot/plot3d/plot_field3d.py b/sage/plot/plot3d/plot_field3d.py
--- a/sage/plot/plot3d/plot_field3d.py
+++ b/sage/plot/plot3d/plot_field3d.py
@@ -60,7 +60,7 @@
 
     TESTS:
 
-    This tests that Trac # 2100 is fixed in a way compatible with this command::
+    This tests that :trac:`2100` is fixed in a way compatible with this command::
 
         sage: plot_vector_field3d((x*cos(z),-y*cos(z),sin(z)), (x,0,pi), (y,0,pi), (z,0,pi),center_arrows=True,aspect_ratio=(1,2,1))
     """
@@ -72,8 +72,9 @@
     try:
         from matplotlib.cm import get_cmap
         cm = get_cmap(colors)
-        assert(cm is not None)
-    except (TypeError, AssertionError):
+    except (TypeError, ValueError):
+        cm = None
+    if cm is None:
         if isinstance(colors, (list, tuple)):
             from matplotlib.colors import LinearSegmentedColormap
             cm = LinearSegmentedColormap.from_list('mymap',colors)
